{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","messageElements","messages","map","m","key","dialogElements","dialogs","d","isAuth","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCapMC,EAVI,SAAEC,GACpB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACC,yBAAKC,UAAYC,IAAEC,QAClB,kBAAC,IAAD,CAASC,GAAKL,GAASD,EAAMO,QCAjBC,EANC,SAAER,GACjB,OACC,yBAAKG,UAAYC,IAAEK,SAAYT,EAAMS,U,0CC+BjCC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAfL,SAACb,GACvB,OACC,0BAAMe,SAAUf,EAAMgB,cACrB,6BACC,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACjBC,SAAU,CAACC,IAAUX,GAClBH,KAAK,iBAAiBe,YAAY,wBAEvC,6BACC,6CAQWC,EA9CC,SAACvB,GAEhB,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,SAASC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAASpB,QAASoB,EAAEpB,QAASqB,IAAKD,EAAE3B,QAC9E6B,EAAiBP,EAAMQ,QAAQJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,KAAMuB,IAAKG,EAAE/B,GAAIA,GAAI+B,EAAE/B,QAMvF,OAAKF,EAAMkC,OAIV,yBAAK/B,UAAWC,IAAE4B,SACjB,yBAAK7B,UAAWC,IAAE+B,cAChBJ,GAEF,yBAAK5B,UAAWC,IAAEuB,UACjB,6BAAMD,GACN,kBAACd,EAAD,CAAqBG,SAdJ,SAACqB,GACpBpC,EAAMqC,YAAYD,EAAOE,qBAGA,kBAAC,IAAD,CAAUhC,GAAI,Y,wBCC1BiC,sBACdC,aAfqB,SAAChB,GACtB,MAAO,CACNC,YAAaD,EAAMC,gBAII,SAACgB,GACzB,MAAO,CACNJ,YAAa,SAACC,GACbG,EAASC,YAAmBJ,SAO9BK,IAFcJ,CAGbhB","file":"static/js/4.5573d0fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__CwqY5\",\"dialogsItems\":\"Dialogs_dialogsItems__2Xe3W\",\"active\":\"Dialogs_active__2N6O_\",\"dialog\":\"Dialogs_dialog__3K-As\",\"messages\":\"Dialogs_messages__1PtJU\",\"message\":\"Dialogs_message__2LHRO\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = ( props ) => {\r\n\tlet path = \"/dialogs/\" + props.id;\r\n\r\n\treturn (\r\n\t\t<div className={ s.dialog }>\r\n\t\t\t<NavLink to={ path }>{ props.name }</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = ( props ) => {\r\n\treturn (\r\n\t\t<div className={ s.message }>{ props.message }</div>\r\n\t)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../api/utils/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.dialogsPage;\r\n\r\n\tlet messageElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\tlet dialogElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t};\r\n\r\n\tif (!props.isAuth) return <Redirect to={\"/Login\"} />;\r\n\r\n\treturn (\r\n\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messageElements}</div>\r\n\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\tcomponent={Textarea}\r\n\t\t\t\t\tvalidate={[required, maxLength50]}\r\n\t\t\t\t\t\t\t\tname=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}